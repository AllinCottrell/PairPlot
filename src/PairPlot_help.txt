Produce grid of subplots depicting pairwise relationships in a dataset. This package maps each variable in a list onto a column and row in a grid of multiple axes.

It can also represent an additional level of conditionalization with the 'factor' argument (a series) which plots different subsets of data in different colors and/or point/circle types. This is used to resolve elements on a third dimension.

For a more detailed manual, see <https://github.com/atecon/PairPlot/blob/master/README.md>.

Please report bugs or comments on the gretl mailing list or write to atecon@posteo.de.


Usage via the GUI
=================
The function PairPlot() can be accessed through the GUI. The menu entry is "View->Graph specified vars->Pair Plot".
However, via scripting the user can control many more details.


Public function
===============

PairPlot(const list L, const string filename[null], bundle opts[null])
===============
Parameters:
-----------
L        -- list, List of series to plot.
filename -- string, Path plus filename plus file type. Currently the following
            file types are supported: png, pdf, eps and svg (monochrome only).
            (optional, default: 'display' which draws the resulting plot
            directly at the screen).
opts     -- bundle, Optional bundle for passing additional parameters. See
            below for explanation (optional, default: null)


Returns:
--------
An integer of value '0' (FALSE) if no error occurs, otherwise 1 (TRUE).


Options passed to the PairPlot() function by means of the 'opts' bundle
=======================================================================
The user can control the following aspects by adding the respective parameter to the 'opts' bundle.

factor   -- series, Optional categorical (numeric or string-valued) variable
            in to map plot aspects to different colors and/or points/ circles
            (optional, default: null).
size     -- series, Placeholder for future feature (optional, default: null).
type     -- string, Select the type of plot. The following types are supported:
            (i) "matrix": Scatterplot matrix which draws a scatter plot between all combinations of variables included in list L.
            (ii) "triangle": Lower triangular version of the scatterplot
            "matrix" type.
            (iii) "row": Plot the first series element in list L in a single
            row against all remaining list members.
            (iv) "row_transponed": Works like type "row" but subplots are
            arranged in a single column instead.
            default: "triangle"
use_circles -- bool, Draw circles instead of points if set to 1 (TRUE),
               default: 0.
pointsize   -- scalar, Control the size of points but not circles. default: 0.5.
pointtype   -- matrix, Control the type of points. Can be either a scalar entry
               such that points associated to different levels of 'factor' are
               of the same type. One may also provide a vector of integers for
               each distinct value of the 'factor' series. default: 7.
key         -- bool, If the 'factor' series is provided, a legend shows the
               color and point pattern for each distinct value of the 'factor'
               variable. default: 1.
key_position - string, Controls the position of the legend in each subplot (use
               standard gnuplot options). default: "top left".
transparency_level
            -- scalar, Controls the transparency level of points and circles
               (between 0 and 1). default: 0.5.
tics     -- bool, Print x-tics and y-tics if 1 (TRUE), or not if 0 (FALSE),
            default: 1.
aspect_scale - scalar, Positive scaling factor for controlling the size of the
               plot. default: 1.
fontsize -- int, Control the font size. default: 8.
font     -- string, Control the type of font. default: "League Spartan".
offset_level - scalar, Provides a mechanism to put a boundary around the data
               inside of an auto-scaled graph. For details see:
               <http://gnuplot.sourceforge.net/docs_4.2/node209.html>
               default: 0.02.



Changelog:
----------
Version 0.6 (March 2021):
    - New API for PairPlot
	- update help text
	- enforce decimal point when print numerical data to gnuplot file
	- substantial internal refactoring and clean up
	- gain of speed
Version 0.5 (Oct. 2019):
	- Initial version
